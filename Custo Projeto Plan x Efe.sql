/* -----------------------------------------------------------
*	Criador query: Marcos Motter Mori
*	Descrição: Traz todos os Custo de projeto planejado e efetivo para uma determinada data (o planejado vem total, por restrição da maneira que está sendo utilizado o clarity).
*	Solicitate: Johnny Pizza
*	Última modificação: 07/08/2009
*	Linguagem : NSQL
*	Query: Custo Projeto Plan x Efe 
------------------------------------------------------------------*/


SELECT   @SELECT:DIM:USER_DEF:IMPLIED:RESOURCE:ID:ID@,
         @SELECT:DIM_PROP:USER_DEF:IMPLIED:RESOURCE:CODIGO:Codigo@,
         @SELECT:DIM_PROP:USER_DEF:IMPLIED:RESOURCE:PROJETO:Projeto@,
         @SELECT:DIM_PROP:USER_DEF:IMPLIED:RESOURCE:PLANEJADO:Planejado@,
         @SELECT:DIM_PROP:USER_DEF:IMPLIED:RESOURCE:EFETIVO:Efetivo@,
         @SELECT:DIM_PROP:USER_DEF:IMPLIED:RESOURCE:saldo:Saldo@,
         @SELECT:DIM_PROP:USER_DEF:IMPLIED:RESOURCE:INVID:PROJETOID@,
         @SELECT:DIM_PROP:USER_DEF:IMPLIED:RESOURCE:GERENTE:GERENTE@,
         @SELECT:DIM_PROP:USER_DEF:IMPLIED:RESOURCE:MANAGERID:IDGERENTE@,
		 @SELECT:DIM_PROP:USER_DEF:IMPLIED:RESOURCE:STATUS:STATUS@


FROM(SELECT CODIGO, PROJETO, SUM(PLANEJADO) PLANEJADO, SUM(EFETIVO) EFETIVO,STATUS STATUS, SUM(PLANEJADO-EFETIVO) Saldo, SUM(PRJ_PLAN+PRJ_EFE+PLANEJADO+INVID) ID, INVID, GERENTE, MANAGERID
	--sub query ( Criada para realizar todos os cálculos)
	FROM
		 (SELECT 
		 CASE WHEN (SL.STATUS) IS NULL THEN EFE.STATUS ELSE (SL.STATUS) END STATUS,
		 CASE WHEN (INV_ID) IS NULL THEN EFE_INVID ELSE (INV_ID) END INVID,
		 CASE WHEN (SL.CODE) IS NULL THEN EFE.CODE ELSE (SL.CODE)END CODIGO, 
		 CASE WHEN (SL.NAME) IS NULL THEN EFE.NAME ELSE (SL.NAME)END PROJETO, 
		 SUM(CASE WHEN (SL.SLICE) IS NULL THEN 0 ELSE (SL.SLICE) END) PLANEJADO, --soma 
		 SUM(CASE WHEN (EFE.SLICE) IS NULL THEN 0 ELSE (EFE.SLICE) END) EFETIVO, --soma
		 SUM(CASE WHEN (SL.PRJ_OBJECT_ID) IS NULL THEN 0 ELSE (SL.PRJ_OBJECT_ID)END) PRJ_PLAN,--soma
		 SUM(CASE WHEN (EFE.PRJ_OBJECT_ID) IS NULL THEN 0 ELSE (EFE.PRJ_OBJECT_ID)END) PRJ_EFE,--soma
		 CASE WHEN (SL.GERENTE) IS NULL THEN EFE.GERENTE ELSE (SL.GERENTE)END GERENTE,
		 CASE WHEN (SL.MANAGERID) IS NULL THEN EFE.MANAGERID ELSE (SL.MANAGERID) END MANAGERID
		 FROM INV_INVESTMENTS INV LEFT JOIN
			--SUB QUERY PARA PEGAR OS VALORES DO OBJETO ODF_SL_5025018
			(SELECT COD.CODIGO CODE,INV.PROGRESS STATUS, INV.NAME NAME, SUM(SL.SLICE) SLICE, SUM(SL.PRJ_OBJECT_ID) PRJ_OBJECT_ID, INV.ID INV_ID, MONTH(SL.SLICE_DATE) Mes, (SRM.FIRST_NAME +' '+SRM.LAST_NAME) GERENTE, SRM.USER_ID MANAGERID
			FROM
			ODF_CA_CONTROLEFINAN CON
			FULL OUTER JOIN NIKU.ODF_SL_5025018 SL ON CON.ID = SL.PRJ_OBJECT_ID 
			RIGHT JOIN NIKU.INV_INVESTMENTS INV ON CON.ODF_CNCRT_PARENT_ID = INV.ID 
			LEFT JOIN (select inv.id id , CASE WHEN INV.ODF_OBJECT_CODE ='PROJECT' THEN (project.CODPROJETO) WHEN INV.ODF_OBJECT_CODE = 'IDEA' THEN IDEA.oportunitycode ELSE' ' END CODIGO from inv_investments inv left join odf_ca_idea idea on inv.id = idea.id left join odf_ca_project  project on inv.id = project.id where inv.IS_ACTIVE = 1
			)cod on inv.id = cod.id

			LEFT JOIN CMN_SEC_USERS USERS ON USERS.ID=INV.MANAGER_ID
			LEFT JOIN SRM_RESOURCES SRM ON  USERS.ID=SRM.USER_ID
			WHERE INV.IS_ACTIVE = 1
			GROUP BY COD.CODIGO, INV.NAME,INV.ID, SL.SLICE_DATE, SRM.FIRST_NAME, SRM.LAST_NAME, SRM.USER_ID, INV.PROGRESS
			) SL ON INV.ID = SL.INV_ID

		FULL OUTER JOIN 

			--SUB QUERY PARA PEGAR OS VALORES DO OBJETO ODF_SL_5025020
			(SELECT COD.CODIGO CODE,INV.PROGRESS STATUS, INV.NAME NAME, SUM(SL.SLICE) SLICE, SUM(SL.PRJ_OBJECT_ID) PRJ_OBJECT_ID, INV.ID EFE_INVID, MONTH(SL.SLICE_DATE) Mes, (SRM.FIRST_NAME +' '+SRM.LAST_NAME) GERENTE, SRM.USER_ID MANAGERID
			FROM
			NIKU.ODF_CA_CONTROLEFINAN CON
			FULL OUTER JOIN NIKU.ODF_SL_5025020 SL ON CON.ID = SL.PRJ_OBJECT_ID AND SL.SLICE_DATE BETWEEN  @WHERE:PARAM:USER_DEF:DATE:pBeginDate@ AND @WHERE:PARAM:USER_DEF:DATE:pEndDate@

			RIGHT JOIN NIKU.INV_INVESTMENTS INV ON CON.ODF_CNCRT_PARENT_ID = INV.ID
			LEFT JOIN (select inv.id id , CASE WHEN INV.ODF_OBJECT_CODE ='PROJECT' THEN (project.CODPROJETO) WHEN INV.ODF_OBJECT_CODE = 'IDEA' THEN IDEA.oportunitycode ELSE' ' END CODIGO from inv_investments inv left join odf_ca_idea idea on inv.id = idea.id left join odf_ca_project  project on inv.id = project.id where inv.IS_ACTIVE = 1
				)cod on inv.id = cod.id


			LEFT JOIN CMN_SEC_USERS USERS ON USERS.ID=INV.MANAGER_ID
			LEFT JOIN SRM_RESOURCES SRM ON  USERS.ID=SRM.USER_ID
			WHERE INV.IS_ACTIVE = 1



			GROUP BY COD.CODIGO, INV.NAME, INV.ID, SL.SLICE_DATE, SRM.FIRST_NAME, SRM.LAST_NAME, SRM.USER_ID, INV.PROGRESS

			) EFE ON SL.PRJ_OBJECT_ID = EFE.PRJ_OBJECT_ID AND SL.MES = EFE.MES OR EFE_INVID = INV.ID

		GROUP BY SL.CODE, SL.NAME, EFE.NAME, EFE.CODE,INV_ID, EFE_INVID, SL.MANAGERID, SL.GERENTE, EFE.MANAGERID, EFE.GERENTE, EFE.STATUS, SL.STATUS) A

	GROUP BY CODIGO, A.PROJETO, INVID, MANAGERID, GERENTE, STATUS


) final
WHERE ((STATUS IS NULL) OR (@WHERE:PARAM:USER_DEF:INTEGER:STATUS:Status@))
AND ((MANAGERID IS NULL) OR (@WHERE:PARAM:USER_DEF:INTEGER:MANAGERID:MANAGERID@))
AND @FILTER@